<?xml version="1.0" encoding="UTF-8"?>
<!-- CREAR DTD -->
<configuration-mapper>
    <!-- Propiedades de conexión -->
    <properties>
        <!-- Link donde efectuará la conexión -->
        <url>192.168.1.1</url>
        <port>4444</port>
        <!-- TODO: Seguir incluyendo más contenido para la configuración --> 
    </properties>
    
    <!-- Mapeador de DTO -->
    <!-- TODO: Programar esta parte -->
    <objects>
        <object resource="DTO/UsuarioDTO.xml" />
        <!-- Seguir metiendo DTO -->
    </objects>
    
    <!-- Mapeador de métodos con URI -->
    <mappers>
        <!-- Método que se ejecutará en el servidor por llamada del cliente de manera reflexiva -->
        <!-- return es lo que devuelve, si pones ... significa que será un array de lo que devuelves-->
        <mapping link="ejecutar" className="testing.Ejecutador" method="Metodo" return="string..." token="true" >
            <!-- Parámetros de entrada del método -->
            <params>
                <param type="string" />
                <!-- <param type="int" /> -->
            </params>
            <!-- Quien puede acceder al contenido, si la lista está vacía podrá acceder todos, en caso contrario solo los que esten incluidos dentro -->
            <!-- La white list permite filtrar tanto por rol como por estado -->
            <white-list>
               <role name="cliente" />
               <role name="administrador" />
               
               <state name="reservando" />
               <state name="alquilando" />
            </white-list>
            <!-- Quien NO puede acceder al contenido, si la lista está vacía no restringirá a nadie -->
            <!-- Se puede discriminar tanto por el rol de quien ejecuta el método como por el estado en el que se encuentra en el servidor -->
            <black-list>
                <role name="tecnico" />
                
                <state name="enElMenu" />
            </black-list>
        </mapping>
        
        <mapping link="test" className="testing.Ejecutador" method="test" return="String" token="false" >
            <params>
                <param type="string" />
            </params>
        </mapping>
        
        <mapping link="login" className="controller.UsuarioController" method="login" return="map" token="false">
            <params>
                <param type="parameters" />
            </params>
        </mapping>
        <mapping link="register" className="controller.UsuarioController" method="register" return="map" token="false">
            <params>
                <param type="parameters" />
            </params>
        </mapping>
        
        <mapping link="echo" className="controller.TestController" method="echo" return="map" token="false">
            <params>
                <param type="parameters" />
            </params>
        </mapping>
        
        <mapping link="getEmpleados" className="controller.EmpleadoController" method="getEmpleados" return="map" token="false">
            <white-list>
                <role name="administrador" />
                <role name="directivo" />
            </white-list>
        </mapping>
    </mappers>
</configuration-mapper>
